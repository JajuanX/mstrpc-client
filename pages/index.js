import styles from './page.module.scss'
import { useUserContext } from '../context/userContext'; 
import { useEffect, useState } from 'react';
import Link from 'next/link';
import SubscriptionService from '@/services/subscription.service';
import { useProfile } from "../context/profileContext";
import Head from 'next/head';


export default function Home() {
	const { user, isLoading } = useUserContext();
	const { getRandomProfiles } = useProfile();
	const [topSection, setTopSection] = useState([]);
	const [bottomSection, setBottomSection] = useState([]);
	const [loading, setLoading] = useState(true);
	const subscriptionAPI = new SubscriptionService()

	useEffect(() => {
		const getProfiles = async () => {
			try {
				const profiles = await getRandomProfiles();
				console.log(profiles);
				// const top = profiles.filter((profile, index) =>  index < 4 && profile.name) || [];
				// const bottom = profiles.filter((_profile, index) =>  index >= 4) || [];
				
				console.log('try', top);
				// setBottomSection(bottom);
				setTopSection(profiles);
				setLoading(false);
			} catch(err) {
				console.error(err);
			}
		}
		getProfiles()

	},[])


	const openCustomerPortal = async () => {
		const createCheckout = await subscriptionAPI.createCheckoutSession({
			email: user.email, 
			_id: user._id,
			username: user.username
		})
		window.location = createCheckout.result.data.url
	}

	const openSubscriptionPortal = async () => {
		const openPortal = await subscriptionAPI.createPortalSession({
			session_id: user.session_id,
			customer: user.customer
		})
		window.location = openPortal.result.data.url
	}

	if (loading) return <div className={styles.loadingState}>Loading data...</div>;

	return (
		<>
			<Head>
				<title>MSTRPC</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.homePage}>
				<section className={styles.profilesTopContainer}>
					{
						topSection.map((profile) => {
							console.log(profile);
							return (
								<Link key={profile._id} href={`/${profile.user_info?.username}`} style={{
										backgroundColor: profile.colors?.secondary,
										color: profile.colors?.font,		
									}} className={styles.profileCard}
								>
									<div className={styles.cardDetails}>
										<div className={styles.photoContainer}>
											<img className={styles.userPhoto} src={profile.image_url}  alt='profile' />
										</div>
										<div>{profile.displayName}</div>
									</div>
									<p className={styles.headline}>{profile.headline}</p>
								</Link>
							)
						})
					}
				</section>
				<section className={styles.titleContainer}>
					<h1>MSTRPC</h1>
				</section>
				<section className={styles.profilesTopContainer}>
					{
						bottomSection.map((profile) => {
							return (
								<Link key={profile._id} href={`/${profile.user_info?.username}`} style={{
										backgroundColor: profile.colors?.secondary,
										color: profile.colors?.font,		
									}} className={styles.profileCard}
								>
									<div className={styles.cardDetails}>
										<div className={styles.photoContainer}>
											<img className={styles.userPhoto} src={profile.user_info?.image_url}  alt='profile' />
										</div>
										<div>{profile.displayName}</div>
									</div>
									<p className={styles.headline}>{profile.headline}</p>
								</Link>
							)
						})
					}
				</section>
				{!isLoading && !user && 
					<Link className={styles.signUp} href="/sign-up">
					Sign Up / Log In
				</Link>}

				{!isLoading && user && !user?.customer && 
					<button
						className={styles.subscribe}
						type='button'
						onClick={openCustomerPortal}
					>
						Subscribe To MSTRPC
					</button>
				}
				{!isLoading && user && user?.customer &&
					<button
						className={styles.subscribe}
						type='button'
						typeOfButton="primary"
						onClick={openSubscriptionPortal}
					>
						Open Subscription Portal
					</button>
				}
			</main>
		</>
	)
}

{/* <section className={styles.topUsers}>
	<h2>Top Users</h2>
	<div className={styles.topPerformersContainer}>
	{
		topPerformers?.map((performers, index) => {
			return (
				<p key={performers._id}>
					<Link href={`http://localhost:3000/${performers._id}`}>#{index + 1}. {performers._id}</Link>
				</p>
			)
		})
	}
	</div>
</section> */}
			{/* {!isLoading && !user?.customer ? <Button
				type='button'
				typeOfButton="primary"
				onClick={openCustomerPortal}
			>
				Subscribe To MSTRPC
			</Button>
			:
			<Button
				type='button'
				typeOfButton="primary"
				onClick={openSubscriptionPortal}
			>
				Open Subscription Portal
			</Button>
			} */}